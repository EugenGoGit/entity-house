syntax = "proto3";

import "entity-tmpl/entity-api.proto";
import "entity-tmpl/entity-rules.proto";
import "google/api/field_behavior.proto";


package entity.feature;

message ServersideSingletonCRUD {
  option (entity.api.name_template) = "{EntityName}Service";
  message MethodSet {
    GetMethod get_method = 1;
    SaveMethodCreateReplace save_method_create_replace = 2;
    EditMethod edit_method = 3;
    DeleteMethod delete_method = 4;
  }
  string http_root = 1;
  MethodSet method_set = 2;
}

message ServersideEntityCRUD {
  option (entity.api.name_template) = "{EntityName}Service";
  message MethodSet {
    GetMethodById get_method = 1;
    GetListMethod get_list_method = 2;
    GetCountMethod get_count_method = 3;
    ExistsKeyMethod exists_key_method = 4;
    ExistsMethod exists_method = 5;
    // .
    oneof save_method {
      // .
      SaveMethodCreateOnly save_method_create_only = 6;
      SaveMethodCreateReplace save_method_create_replace = 7;
    }
    // .
    oneof save_list_method {
      // .
      SaveListMethodCreateOnly save_list_method_create_only = 8;
      SaveListMethodCreateReplace save_list_method_create_replace = 9;
    }
    EditMethodById edit_method = 10;
    EditListMethod edit_list_method = 11;
    DeleteMethodById delete_method = 12;
    DeleteListMethod delete_list_method = 13;
  }
  string http_root = 1;
  MethodSet method_set = 2;
  string unique_key = 3;
}

message SaveMethodCreateReplace {
  option (entity.api.method_component_template_set) = {
    name_template:"Save{EntityName}",
    request_dto_name_template: "Save{EntityName}Request",
    response_dto_name_template: "Save{EntityName}Response"
  };
  option (entity.api.http_rule) = {
    post: "/{HttpRoot}/list",
    body: "*"
  };
  option (entity.rules.key_field_behavior) = FIELD_BEHAVIOR_UNSPECIFIED;
}

message SaveListMethodCreateReplace {
  option (entity.api.method_component_template_set) = {
    name_template:"Save{EntityName}List",
    request_dto_name_template: "Save{EntityName}ListRequest",
    response_dto_name_template: "Save{EntityName}ListResponse"
  };
  option (entity.api.http_rule) = {
    post: "/{HttpRoot}/list",
    body: "*"
  };
  option (entity.rules.key_field_behavior) = FIELD_BEHAVIOR_UNSPECIFIED;
}

message SaveMethodCreateOnly {
  option (entity.api.method_component_template_set) = {
    name_template:"Save{EntityName}",
    request_dto_name_template: "Save{EntityName}Request",
    response_dto_name_template: "Save{EntityName}Response"
  };
  option (entity.api.http_rule) = {
    post: "/{HttpRoot}",
    body: "*"
  };
  option (entity.rules.key_field_behavior) = OUTPUT_ONLY;
}

message SaveListMethodCreateOnly {
  option (entity.api.method_component_template_set) = {
    name_template:"Save{EntityName}List",
    request_dto_name_template: "Save{EntityName}ListRequest",
    response_dto_name_template: "Save{EntityName}ListResponse"
  };
  option (entity.api.http_rule) = {
    post: "/{HttpRoot}/list",
    body: "*"
  };
  option (entity.rules.key_field_behavior) = OUTPUT_ONLY;
}

message EditMethodById {
  option (entity.api.method_component_template_set) = {
    name_template:"Edit{EntityName}",
    request_dto_name_template: "Edit{EntityName}Request",
    response_dto_name_template: "Edit{EntityName}Response"
  };
  option (entity.api.http_rule) = {
    patch: "/{HttpRoot}/{IdExpression}",
    body: "data"
  };
  option (entity.rules.key_field_behavior) = REQUIRED;
  // Переопределяет unique_key сервиса
  string unique_key = 1;
}

message EditMethod {
  option (entity.api.method_component_template_set) = {
    name_template:"Edit{EntityName}",
    request_dto_name_template: "Edit{EntityName}Request",
    response_dto_name_template: "Edit{EntityName}Response"
  };
  option (entity.api.http_rule) = {
    patch: "/{HttpRoot}",
    body: "data"
  };
  option (entity.rules.key_field_behavior) = FIELD_BEHAVIOR_UNSPECIFIED;
}

message EditListMethod {
  option (entity.api.method_component_template_set) = {
    name_template:"Edit{EntityName}List",
    request_dto_name_template: "Edit{EntityName}ListRequest",
    response_dto_name_template: "Edit{EntityName}ListResponse"
  };
  option (entity.api.http_rule) = {
    patch: "/{HttpRoot}/list",
    body: "data"
  };
  option (entity.rules.key_field_behavior) = REQUIRED;
}

message DeleteMethodById {
  option (entity.api.method_component_template_set) = {
    name_template:"Delete{EntityName}",
    request_dto_name_template: "Delete{EntityName}Request",
    response_dto_name_template: "Delete{EntityName}Response",
  };
  option (entity.api.http_rule) = {
    delete: "/{HttpRoot}/{IdExpression}"
  };
  option (entity.rules.key_field_behavior) = REQUIRED;
  // Переопределяет unique_key сервиса
  string unique_key = 1;
}

message DeleteMethod {
  option (entity.api.method_component_template_set) = {
    name_template:"Delete{EntityName}",
    request_dto_name_template: "Delete{EntityName}Request",
    response_dto_name_template: "Delete{EntityName}Response",
  };
  option (entity.api.http_rule) = {
    delete: "/{HttpRoot}"
  };
  option (entity.rules.key_field_behavior) = FIELD_BEHAVIOR_UNSPECIFIED;
}

message DeleteListMethod {
  option (entity.api.method_component_template_set) = {
    name_template:"Delete{EntityName}List",
    request_dto_name_template: "Delete{EntityName}ListRequest",
    response_dto_name_template: "Delete{EntityName}ListResponse"
  };
  option (entity.api.http_rule) = {
    delete: "/{HttpRoot}"
  };
  option (entity.rules.key_field_behavior) = FIELD_BEHAVIOR_UNSPECIFIED;
}

message GetMethodById {
  option (entity.api.method_component_template_set) = {
    name_template:"Get{EntityName}",
    request_dto_name_template: "Get{EntityName}Request",
    response_dto_name_template: "Get{EntityName}Response",
    request_dto_template: { entity_id:{} },
    response_dto_template: { one_entity:{} }
  };
  option (entity.api.http_rule) = {
    get: "/{HttpRoot}/{IdExpression}"
  };
  option (entity.rules.key_field_behavior) = REQUIRED;
  // Переопределяет unique_key сервиса
  string unique_key = 1;
}

message GetMethod {
  option (entity.api.method_component_template_set) = {
    name_template:"Get{EntityName}",
    request_dto_name_template: "Get{EntityName}Request",
    response_dto_name_template: "Get{EntityName}Response",
    request_dto_template: {}
    response_dto_template: { one_entity:{} }
  };
  option (entity.api.http_rule) = {
    get: "/{HttpRoot}"
  };
  option (entity.rules.key_field_behavior) = FIELD_BEHAVIOR_UNSPECIFIED;
}

message GetListMethod {
  option (entity.api.method_component_template_set) = {
    name_template:"Get{EntityName}List",
    request_dto_name_template: "Get{EntityName}ListRequest",
    response_dto_name_template: "Get{EntityName}ListResponse"
  };
  option (entity.api.http_rule) = {
    get: "/{HttpRoot}"
  };
  option (entity.rules.key_field_behavior) = FIELD_BEHAVIOR_UNSPECIFIED;
}

message GetCountMethod {
  option (entity.api.method_component_template_set) = {
    name_template:"Get{EntityName}Count",
    request_dto_name_template: "Get{EntityName}CountRequest",
    response_dto_name_template: "Get{EntityName}CountResponse"
  };
  option (entity.api.http_rule) = {
    get: "/{HttpRoot}/count"
  };
  option (entity.rules.key_field_behavior) = FIELD_BEHAVIOR_UNSPECIFIED;
}

message ExistsMethod {
}

message ExistsKeyMethod {
}
message AttachMethod {
}

message DetachMethod {
}

message GetLinkListMethod {
}

message GetLinkCountMethod {
}


