syntax = "proto3";

import "entity-tmpl/entity-feature-api-options.proto";
import "entity-tmpl/entity-feature-options.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/descriptor.proto";
import "google/api/http.proto";


package entity.feature.api.method;


message SaveMethodCreateReplace {
  option (entity.feature.api.options.method_component_template_set) = {
    name_template:"Save{EntityName}"
    request_name: "Save{EntityName}Request"
    response_name: "Save{EntityName}Response"
    response_template: {one_entity_response:{}}
    request_template: {entity_request:{}}
    leading_comment: "Метод создания/редактирования сущности {EntityName}"
  };
  option (entity.feature.api.options.http_rule) = {
    post: "/{HttpRoot}",
    body: "*"
  };
  option (entity.feature.api.options.key_field_behavior) = FIELD_BEHAVIOR_UNSPECIFIED;
  CustomComments custom_comments = 1;
}

message SaveListMethodCreateReplace {
  option (entity.feature.api.options.method_component_template_set) = {
    name_template:"Save{EntityName}List",
    request_name: "Save{EntityName}ListRequest",
    response_name: "Save{EntityName}ListResponse"
  };
  option (entity.feature.api.options.http_rule) = {
    post: "/{HttpRoot}/list",
    body: "*"
  };
  option (entity.feature.api.options.key_field_behavior) = FIELD_BEHAVIOR_UNSPECIFIED;
}

message SaveMethodCreateOnly {
  option (entity.feature.api.options.method_component_template_set) = {
    name_template:"Save{EntityName}",
    request_name: "Save{EntityName}Request",
    response_name: "Save{EntityName}Response"
  };
  option (entity.feature.api.options.http_rule) = {
    post: "/{HttpRoot}",
    body: "*"
  };
  option (entity.feature.api.options.key_field_behavior) = OUTPUT_ONLY;
}

message SaveListMethodCreateOnly {
  option (entity.feature.api.options.method_component_template_set) = {
    name_template:"Save{EntityName}List",
    request_name: "Save{EntityName}ListRequest",
    response_name: "Save{EntityName}ListResponse"
  };
  option (entity.feature.api.options.http_rule) = {
    post: "/{HttpRoot}/list",
    body: "*"
  };
  option (entity.feature.api.options.key_field_behavior) = OUTPUT_ONLY;
}

message EditMethodById {
  option (entity.feature.api.options.method_component_template_set) = {
    name_template:"Edit{EntityName}",
    request_name: "Edit{EntityName}Request",
    response_name: "Edit{EntityName}Response"
  };
  option (entity.feature.api.options.http_rule) = {
    patch: "/{HttpRoot}/{KeyFields}",
    body: "data"
  };
  option (entity.feature.api.options.key_field_behavior) = REQUIRED;
  // Переопределяет key_fields сервиса
  repeated string key_fields = 1;
}

message EditMethod {
  option (entity.feature.api.options.method_component_template_set) = {
    name_template:"Edit{EntityName}",
    request_name: "Edit{EntityName}Request",
    response_name: "Edit{EntityName}Response"
  };
  option (entity.feature.api.options.http_rule) = {
    patch: "/{HttpRoot}",
    body: "data"
  };
  option (entity.feature.api.options.key_field_behavior) = FIELD_BEHAVIOR_UNSPECIFIED;
}

message EditListMethod {
  option (entity.feature.api.options.method_component_template_set) = {
    name_template:"Edit{EntityName}List",
    request_name: "Edit{EntityName}ListRequest",
    response_name: "Edit{EntityName}ListResponse"
  };
  option (entity.feature.api.options.http_rule) = {
    patch: "/{HttpRoot}/list",
    body: "data"
  };
  option (entity.feature.api.options.key_field_behavior) = REQUIRED;
}

message CustomComments {
  // Переопределяет entity.feature.api.options.method_component_template_set.leading_comment
  string leading_comment = 1;
  // Дополнительный комментарий к методу
  string additional_leading_comment = 2;
  // Комментарий к запросу метода
  // Переопределяет комментарий по умолчанию
  string request_leading_comment = 3;
  // Комментарий к ответу метода
  // Переопределяет комментарий по умолчанию
  string response_leading_comment = 4;
}

message DeleteMethodById {
  option (entity.feature.api.options.method_component_template_set) = {
    name_template:"Delete{EntityName}",
    request_name: "Delete{EntityName}Request",
    response_name: "Delete{EntityName}Response",
    leading_comment: "Метод удаления единичной сущности {EntityName} по ключу"
    response_template: {empty_w_error_response:{}}
    request_template: {entity_key_request:{}}
  };
  option (entity.feature.api.options.http_rule) = {
    delete: "/{HttpRoot}/{KeyFields}"
  };
  option (entity.feature.api.options.key_field_behavior) = REQUIRED;
  // Переопределяет key_fields сервиса
  repeated string key_fields = 1;
  CustomComments custom_comments = 2;
}

message DeleteMethod {
  option (entity.feature.api.options.method_component_template_set) = {
    name_template:"Delete{EntityName}",
    request_name: "Delete{EntityName}Request",
    response_name: "Delete{EntityName}Response",
  };
  option (entity.feature.api.options.http_rule) = {
    delete: "/{HttpRoot}"
  };
  option (entity.feature.api.options.key_field_behavior) = FIELD_BEHAVIOR_UNSPECIFIED;
}

message DeleteListMethod {
  option (entity.feature.api.options.method_component_template_set) = {
    name_template:"Delete{EntityName}List",
    request_name: "Delete{EntityName}ListRequest",
    response_name: "Delete{EntityName}ListResponse"
  };
  option (entity.feature.api.options.http_rule) = {
    delete: "/{HttpRoot}"
  };
  option (entity.feature.api.options.key_field_behavior) = FIELD_BEHAVIOR_UNSPECIFIED;
}

message GetMethodById {
  option (entity.feature.api.options.method_component_template_set) = {
    name_template:"Get{EntityName}",
    request_name: "Get{EntityName}Request",
    response_name: "Get{EntityName}Response",
    response_template: {one_entity_response:{}}
    request_template: {entity_key_request:{}}
    leading_comment: "Метод получения единичной сущности {EntityName} по ключу"
  };
  option (entity.feature.api.options.http_rule) = {
    get: "/{HttpRoot}/{KeyFields}"
  };
  option (entity.feature.api.options.key_field_behavior) = REQUIRED;
  // Определение ключевых полей сущности для использования в методе
  // Переопределяет key_fields сервиса
  entity.feature.options.KeyFieldsDefinition key_fields_definition = 1;
  CustomComments custom_comments = 2;
}

message GetMethod {
  option (entity.feature.api.options.method_component_template_set) = {
    name_template:"Get{EntityName}",
    request_name: "Get{EntityName}Request",
    response_name: "Get{EntityName}Response"
  };
  option (entity.feature.api.options.http_rule) = {
    get: "/{HttpRoot}"
  };
  option (entity.feature.api.options.key_field_behavior) = FIELD_BEHAVIOR_UNSPECIFIED;
}

message GetListMethod {
  option (entity.feature.api.options.method_component_template_set) = {
    name_template:"Get{EntityName}List",
    request_name: "Get{EntityName}ListRequest",
    response_name: "Get{EntityName}ListResponse"
    response_template: {one_entity_response:{}}
    leading_comment: "Метод получения списка сущностей {EntityName} по фильтру"
  };
  option (entity.feature.api.options.http_rule) = {
    get: "/{HttpRoot}/list"
  };
  option (entity.feature.api.options.server_streaming) = true;
  option (entity.feature.api.options.key_field_behavior) = FIELD_BEHAVIOR_UNSPECIFIED;
  CustomComments custom_comments = 1;
}

message GetCountMethod {
  option (entity.feature.api.options.method_component_template_set) = {
    name_template:"Get{EntityName}Count",
    request_name: "Get{EntityName}CountRequest",
    response_name: "Get{EntityName}CountResponse"
    response_template: {count_entity_response:{}}
    leading_comment: "Метод получения количества сущностей {EntityName} по фильтру"
  };
  option (entity.feature.api.options.http_rule) = {
    get: "/{HttpRoot}/count"
  };
  option (entity.feature.api.options.key_field_behavior) = FIELD_BEHAVIOR_UNSPECIFIED;
  CustomComments custom_comments = 1;
}

message ExistsMethod {
}

message ExistsKeyMethod {
}
message AttachMethod {
}

message DetachMethod {
}

message GetLinkListMethod {
}

message GetLinkCountMethod {
}


