syntax = "proto3";

import "entity-tmpl/entity-feature-api-options.proto";
import "entity-tmpl/entity-feature-options.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/descriptor.proto";
import "google/api/http.proto";


package entity.feature.api.method;


// TODO: попробовать использовать дескрипторы MethodDescriptor из google/protobuf/descriptor.proto";
// TODO: вынести неиспользуемые в prerelease
// TODO: Подстановки сделать не {EntityTypeName}{LinkedType}, а из полей {entity:type_name}{method:linked_type},
message SaveMethodCreateReplace {
  option (entity.feature.api.options.method_component_template_set) = {
    name_template:"Save{EntityTypeName}"
    request_name: "Save{EntityTypeName}Request"
    response_name: "Save{EntityTypeName}Response"
    response_template: {one_entity_saving_response:{}}
    request_template: {entity_request:{}}
    leading_comment: "Метод создания/редактирования сущности {EntityTypeName}"
  };
  option (entity.feature.api.options.http_rule) = {
    post: "/{HttpRoot}",
    body: "*"
  };
  option (entity.feature.api.options.key_field_behavior) = FIELD_BEHAVIOR_UNSPECIFIED;
  CustomComments custom_comments = 1;
}

message SaveListMethodCreateReplace {
  option (entity.feature.api.options.method_component_template_set) = {
    name_template:"Save{EntityTypeName}List",
    request_name: "Save{EntityTypeName}ListRequest",
    response_name: "Save{EntityTypeName}ListResponse"
  };
  option (entity.feature.api.options.http_rule) = {
    post: "/{HttpRoot}/list",
    body: "*"
  };
  option (entity.feature.api.options.key_field_behavior) = FIELD_BEHAVIOR_UNSPECIFIED;
}

message SaveMethodCreateOnly {
  option (entity.feature.api.options.method_component_template_set) = {
    name_template:"Save{EntityTypeName}",
    request_name: "Save{EntityTypeName}Request",
    response_name: "Save{EntityTypeName}Response"
  };
  option (entity.feature.api.options.http_rule) = {
    post: "/{HttpRoot}",
    body: "*"
  };
  option (entity.feature.api.options.key_field_behavior) = OUTPUT_ONLY;
}

message SaveListMethodCreateOnly {
  option (entity.feature.api.options.method_component_template_set) = {
    name_template:"Save{EntityTypeName}List",
    request_name: "Save{EntityTypeName}ListRequest",
    response_name: "Save{EntityTypeName}ListResponse"
  };
  option (entity.feature.api.options.http_rule) = {
    post: "/{HttpRoot}/list",
    body: "*"
  };
  option (entity.feature.api.options.key_field_behavior) = OUTPUT_ONLY;
}

message EditMethodById {
  option (entity.feature.api.options.method_component_template_set) = {
    name_template:"Edit{EntityTypeName}",
    request_name: "Edit{EntityTypeName}Request",
    response_name: "Edit{EntityTypeName}Response"
  };
  option (entity.feature.api.options.http_rule) = {
    patch: "/{HttpRoot}/{KeyFields}",
    body: "data"
  };
  option (entity.feature.api.options.key_field_behavior) = REQUIRED;
  // Переопределяет key_fields сервиса
  repeated string key_fields = 1;
}

message EditMethod {
  option (entity.feature.api.options.method_component_template_set) = {
    name_template:"Edit{EntityTypeName}",
    request_name: "Edit{EntityTypeName}Request",
    response_name: "Edit{EntityTypeName}Response"
  };
  option (entity.feature.api.options.http_rule) = {
    patch: "/{HttpRoot}",
    body: "data"
  };
  option (entity.feature.api.options.key_field_behavior) = FIELD_BEHAVIOR_UNSPECIFIED;
}

message EditListMethod {
  option (entity.feature.api.options.method_component_template_set) = {
    name_template:"Edit{EntityTypeName}List",
    request_name: "Edit{EntityTypeName}ListRequest",
    response_name: "Edit{EntityTypeName}ListResponse"
  };
  option (entity.feature.api.options.http_rule) = {
    patch: "/{HttpRoot}/list",
    body: "data"
  };
  option (entity.feature.api.options.key_field_behavior) = REQUIRED;
}

message CustomComments {
  // Переопределяет entity.feature.api.options.method_component_template_set.leading_comment
  string leading_comment = 1;
  // Дополнительный комментарий к методу
  string additional_leading_comment = 2;
  // Комментарий к запросу метода
  // Переопределяет комментарий по умолчанию
  string request_leading_comment = 3;
  // Комментарий к ответу метода
  // Переопределяет комментарий по умолчанию
  string response_leading_comment = 4;
}

message DeleteMethodById {
  option (entity.feature.api.options.method_component_template_set) = {
    name_template:"Delete{EntityTypeName}",
    request_name: "Delete{EntityTypeName}Request",
    response_name: "Delete{EntityTypeName}Response",
    leading_comment: "Метод удаления единичной сущности {EntityTypeName} по ключу"
    response_template: {empty_w_error_response:{}}
    request_template: {entity_key_request:{}}
  };
  option (entity.feature.api.options.http_rule) = {
    delete: "/{HttpRoot}/{KeyFields}"
  };
  option (entity.feature.api.options.key_field_behavior) = REQUIRED;
  // Переопределяет key_fields сервиса
  repeated string key_fields = 1;
  CustomComments custom_comments = 2;
}

message RestoreMethodById {
  option (entity.feature.api.options.method_component_template_set) = {
    name_template:"Post{EntityTypeName}Restore",
    request_name: "Post{EntityTypeName}RestoreRequest",
    response_name: "Post{EntityTypeName}RestoreResponse",
    leading_comment: "Метод восстановлении удаленной сущности {EntityTypeName} по ключу"
    response_template: {empty_w_error_response:{}}
    request_template: {entity_key_request:{}}
  };
  option (entity.feature.api.options.http_rule) = {
    post: "/{HttpRoot}/restore/{KeyFields}"
  };
  option (entity.feature.api.options.key_field_behavior) = REQUIRED;
  // Переопределяет key_fields сервиса
  repeated string key_fields = 1;
  CustomComments custom_comments = 2;
}

message DeleteMethod {
  option (entity.feature.api.options.method_component_template_set) = {
    name_template:"Delete{EntityTypeName}",
    request_name: "Delete{EntityTypeName}Request",
    response_name: "Delete{EntityTypeName}Response",
  };
  option (entity.feature.api.options.http_rule) = {
    delete: "/{HttpRoot}"
  };
  option (entity.feature.api.options.key_field_behavior) = FIELD_BEHAVIOR_UNSPECIFIED;
}

message DeleteListMethod {
  option (entity.feature.api.options.method_component_template_set) = {
    name_template:"Delete{EntityTypeName}List",
    request_name: "Delete{EntityTypeName}ListRequest",
    response_name: "Delete{EntityTypeName}ListResponse"
  };
  option (entity.feature.api.options.http_rule) = {
    delete: "/{HttpRoot}"
  };
  option (entity.feature.api.options.key_field_behavior) = FIELD_BEHAVIOR_UNSPECIFIED;
}

message GetMethodById {
  option (entity.feature.api.options.method_component_template_set) = {
    name_template:"Get{EntityTypeName}",
    request_name: "Get{EntityTypeName}Request",
    response_name: "Get{EntityTypeName}Response",
    response_template: {one_entity_response:{}}
    request_template: {entity_key_request:{}}
    leading_comment: "Метод получения единичной сущности {EntityTypeName} по ключу"
  };
  option (entity.feature.api.options.http_rule) = {
    get: "/{HttpRoot}/{KeyFields}"
  };
  option (entity.feature.api.options.key_field_behavior) = REQUIRED;
  // Определение ключевых полей сущности для использования в методе
  // Переопределяет key_fields сервиса
  entity.feature.options.KeyFieldsDefinition key_fields_definition = 1;
  CustomComments custom_comments = 2;
}

message GetMethod {
  option (entity.feature.api.options.method_component_template_set) = {
    name_template:"Get{EntityTypeName}",
    request_name: "Get{EntityTypeName}Request",
    response_name: "Get{EntityTypeName}Response"
  };
  option (entity.feature.api.options.http_rule) = {
    get: "/{HttpRoot}"
  };
  option (entity.feature.api.options.key_field_behavior) = FIELD_BEHAVIOR_UNSPECIFIED;
}

message GetListMethod {
  option (entity.feature.api.options.method_component_template_set) = {
    name_template:"Get{EntityTypeName}List",
    request_name: "Get{EntityTypeName}ListRequest",
    response_name: "Get{EntityTypeName}ListResponse"
    request_template: {filter_paging_request:{}}
    response_template: {one_entity_response:{}}
    leading_comment: "Метод получения списка сущностей {EntityTypeName} по фильтру"
  };
  option (entity.feature.api.options.http_rule) = {
    get: "/{HttpRoot}/list"
  };
  option (entity.feature.api.options.server_streaming) = true;
  option (entity.feature.api.options.key_field_behavior) = FIELD_BEHAVIOR_UNSPECIFIED;
  CustomComments custom_comments = 1;
  // TODO: Переименовать order_by_values
  repeated EnumValue order_by_set = 2;
}

message EnumValue {
  string name = 1;
  string title = 2;
}

message GetCountMethod {
  option (entity.feature.api.options.method_component_template_set) = {
    name_template:"Get{EntityTypeName}Count",
    request_name: "Get{EntityTypeName}CountRequest",
    response_name: "Get{EntityTypeName}CountResponse"
    request_template: {filter_request:{}}
    response_template: {count_entity_response:{}}
    leading_comment: "Метод получения количества сущностей {EntityTypeName} по фильтру"
  };
  option (entity.feature.api.options.http_rule) = {
    get: "/{HttpRoot}/count"
  };
  option (entity.feature.api.options.key_field_behavior) = FIELD_BEHAVIOR_UNSPECIFIED;
  CustomComments custom_comments = 1;
}

message ExistsMethod {
}

message ExistsKeyMethod {
}

message AttachMethod {
  option (entity.feature.api.options.method_component_template_set) = {
    name_template:"Put{EntityTypeName}{LinkedType}Attach",
    request_name: "Put{EntityTypeName}{LinkedType}AttachRequest",
    response_name: "Put{EntityTypeName}{LinkedType}AttachResponse"
    request_template: {link_request:{}}
    response_template: {empty_w_error_response:{}}
    leading_comment: "Метод привязки {EntityTypeName} и {LinkedType}"
  };
  option (entity.feature.api.options.http_rule) = {
    put: "/{HttpRoot}/{LinkedKeyPath}/attach"
  };
  option (entity.feature.api.options.key_field_behavior) = FIELD_BEHAVIOR_UNSPECIFIED;
  CustomComments custom_comments = 1;
  string linked_type = 2;
  string linked_key_path = 3;
}

message DetachMethod {
  option (entity.feature.api.options.method_component_template_set) = {
    name_template:"Put{EntityTypeName}{LinkedType}Detach",
    request_name: "Put{EntityTypeName}{LinkedType}DetachRequest",
    response_name: "Put{EntityTypeName}{LinkedType}DetachResponse"
    request_template: {link_request:{}}
    response_template: {empty_w_error_response:{}}
    leading_comment: "Метод привязки {EntityTypeName} и {LinkedType}"
  };
  option (entity.feature.api.options.http_rule) = {
    put: "/{HttpRoot}/{LinkedKeyPath}/detach"
  };
  option (entity.feature.api.options.key_field_behavior) = FIELD_BEHAVIOR_UNSPECIFIED;
  CustomComments custom_comments = 1;
  string linked_type = 2;
  string linked_key_path = 3;
}

message GetLinkListMethod {
  option (entity.feature.api.options.method_component_template_set) = {
    name_template:"Get{EntityTypeName}{LinkedType}List",
    request_name: "Get{EntityTypeName}{LinkedType}ListRequest",
    response_name: "Get{EntityTypeName}{LinkedType}ListResponse"
    request_template: {link_filter_paging_request:{}}
    response_template: {one_entity_response:{}}
    leading_comment: "Метод получения списка сущностей {EntityTypeName} по фильтру"
  };
  option (entity.feature.api.options.http_rule) = {
    get: "/{HttpRoot}/{LinkedType}/list"
  };
  option (entity.feature.api.options.server_streaming) = true;
  option (entity.feature.api.options.key_field_behavior) = FIELD_BEHAVIOR_UNSPECIFIED;
  CustomComments custom_comments = 1;
  // TODO: Переименовать order_by_values
  repeated EnumValue order_by_set = 2;
  string linked_type = 3;
}

message GetLinkCountMethod {
  option (entity.feature.api.options.method_component_template_set) = {
    name_template:"Get{EntityTypeName}{LinkedType}Count",
    request_name: "Get{EntityTypeName}{LinkedType}CountRequest",
    response_name: "Get{EntityTypeName}{LinkedType}CountResponse"
    request_template: {link_filter_request:{}}
    response_template: {count_entity_response:{}}
    leading_comment: "Метод получения количества сущностей {EntityTypeName} по фильтру"
  };
  option (entity.feature.api.options.http_rule) = {
    get: "/{HttpRoot}/{LinkedType}/count"
  };
  option (entity.feature.api.options.key_field_behavior) = FIELD_BEHAVIOR_UNSPECIFIED;
  CustomComments custom_comments = 1;
  string linked_type = 2;
}


