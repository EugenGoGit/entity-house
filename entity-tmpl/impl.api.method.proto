syntax = "proto3";

import "impl.api.dto.proto";
import "entity.feature.api.method.proto";
import "entity.feature.proto";

package impl.api.method;

message SaveCreateReplace {
  message RequestTemplate {
    oneof template {
      dto.Entity entity = 1;
    }
  }
  message ResponseTemplate {
    oneof template {
      dto.EntityWSavingError entity_saving_error = 1;
      dto.Entity entity = 2;
      dto.Empty empty = 3;
    }
  }
  entity.feature.api.method.Attributes attributes = 1;
  RequestTemplate request_template = 2;
  ResponseTemplate response_template = 3;
  entity.feature.api.method.Variables variables = 6;
}

//message SaveListCreateReplace {
//  option (entity.feature.api.method.name) = "Save{EntityTypeName}List";
//  option (entity.feature.api.method.request_name) = "Save{EntityTypeName}ListRequest";
//  option (entity.feature.api.method.response_name) = "Save{EntityTypeName}ListResponse";
//
//  option (entity.feature.api.method.http_rule) = {
//    post: "/{HttpRoot}/list",
//    body: "*"
//  };
//  option (entity.feature.api.method.key_field_behavior) = FIELD_BEHAVIOR_UNSPECIFIED;
//}

//message SaveCreateOnly {
//  option (entity.feature.api.method.name) = "Save{EntityTypeName}";
//  option (entity.feature.api.method.request_name) = "Save{EntityTypeName}Request";
//  option (entity.feature.api.method.response_name) = "Save{EntityTypeName}Response";
//  option (entity.feature.api.method.http_rule) = {
//    post: "/{HttpRoot}",
//    body: "*"
//  };
//  option (entity.feature.api.method.key_field_behavior) = OUTPUT_ONLY;
//}

//message SaveListCreateOnly {
//  option (entity.feature.api.method.name) = "Save{EntityTypeName}List";
//  option (entity.feature.api.method.request_name) = "Save{EntityTypeName}ListRequest";
//  option (entity.feature.api.method.response_name) = "Save{EntityTypeName}ListResponse";
//  option (entity.feature.api.method.http_rule) = {
//    post: "/{HttpRoot}/list",
//    body: "*"
//  };
//  option (entity.feature.api.method.key_field_behavior) = OUTPUT_ONLY;
//}
//

//message EditById {
//  option (entity.feature.api.method.name) = "Edit{EntityTypeName}";
//  option (entity.feature.api.method.request_name) = "Edit{EntityTypeName}Request";
//  option (entity.feature.api.method.response_name) = "Edit{EntityTypeName}Response";
//  option (entity.feature.api.method.http_rule) = {
//    patch: "/{HttpRoot}/{KeyFields}",
//    body: "data"
//  };
//  option (entity.feature.api.method.key_field_behavior) = REQUIRED;
//  // Определение ключевых полей сущности для использования в методе
//  // Переопределяет key_fields сервиса
//  entity.feature.KeyFieldsDefinition key_fields_definition = 1;
//}

//message Edit {
//  option (entity.feature.api.method.name) = "Edit{EntityTypeName}";
//  option (entity.feature.api.method.request_name) = "Edit{EntityTypeName}Request";
//  option (entity.feature.api.method.response_name) = "Edit{EntityTypeName}Response";
//  option (entity.feature.api.method.http_rule) = {
//    patch: "/{HttpRoot}",
//    body: "data"
//  };
//  option (entity.feature.api.method.key_field_behavior) = FIELD_BEHAVIOR_UNSPECIFIED;
//}

//message EditList {
//  option (entity.feature.api.method.name) = "Edit{EntityTypeName}List";
//  option (entity.feature.api.method.request_name) = "Edit{EntityTypeName}ListRequest";
//  option (entity.feature.api.method.response_name) = "Edit{EntityTypeName}ListResponse";
//  option (entity.feature.api.method.http_rule) = {
//    patch: "/{HttpRoot}/list",
//    body: "data"
//  };
//  option (entity.feature.api.method.key_field_behavior) = REQUIRED;
//}


message DeleteById {
  message RequestTemplate {
    oneof template {
      dto.EntityKey entity_key = 1;
    }
  }
  message ResponseTemplate {
    oneof template {
      dto.OnlyValidError valid_error = 1;
      dto.Empty empty = 2;
    }
  }
  entity.feature.api.method.Attributes attributes = 1;
  RequestTemplate request_template = 2;
  ResponseTemplate response_template = 3;
  entity.feature.api.method.Variables variables = 6;
}

message RestoreById {
  message RequestTemplate {
    oneof template {
      dto.EntityKey entity_key = 1;
    }
  }
  message ResponseTemplate {
    oneof template {
      dto.OnlyValidError valid_error = 1;
      dto.Empty empty = 2;
    }
  }
  entity.feature.api.method.Attributes attributes = 1;
  RequestTemplate request_template = 2;
  ResponseTemplate response_template = 3;
  entity.feature.api.method.Variables variables = 6;
}

//message Delete {
//
//  option (entity.feature.api.method.name) = "Delete{EntityTypeName}";
//  option (entity.feature.api.method.request_name) = "Delete{EntityTypeName}Request";
//  option (entity.feature.api.method.response_name) = "Delete{EntityTypeName}Response";
//  option (entity.feature.api.method.http_rule) = {
//    delete: "/{HttpRoot}"
//  };
//  option (entity.feature.api.method.key_field_behavior) = FIELD_BEHAVIOR_UNSPECIFIED;
//}
//
//message DeleteList {
//
//  option (entity.feature.api.method.name) = "Delete{EntityTypeName}List";
//  option (entity.feature.api.method.request_name) = "Delete{EntityTypeName}ListRequest";
//  option (entity.feature.api.method.response_name) = "Delete{EntityTypeName}ListResponse";
//  option (entity.feature.api.method.http_rule) = {
//    delete: "/{HttpRoot}"
//  };
//  option (entity.feature.api.method.key_field_behavior) = FIELD_BEHAVIOR_UNSPECIFIED;
//}

message GetById {
  message RequestTemplate {
    oneof template {
      dto.EntityKey entity_key = 1;
      dto.EntityKeyScope entity_key_scope = 2;
      dto.EntityKeyReqScope entity_key_req_scope = 3;
    }
  }
  message ResponseTemplate {
    oneof template {
      dto.Entity entity = 1;
      dto.EntityWError entity_error = 2;
    }
  }
  entity.feature.api.method.Attributes attributes = 1;
  RequestTemplate request_template = 2;
  ResponseTemplate response_template = 3;
  // Определение ключевых полей сущности для использования в методе
  // Переопределяет key_fields сервиса
  entity.feature.KeyFieldsDefinition key_fields_definition = 4;
  entity.feature.api.method.Variables variables = 6;
}

//
//message Get {
//  option (entity.feature.api.method.name) = "Get{EntityTypeName}";
//  option (entity.feature.api.method.request_name) = "Get{EntityTypeName}Request";
//  option (entity.feature.api.method.response_name) = "Get{EntityTypeName}Response";
//  option (entity.feature.api.method.http_rule) = {
//    get: "/{HttpRoot}"
//  };
//  option (entity.feature.api.method.key_field_behavior) = FIELD_BEHAVIOR_UNSPECIFIED;
//  entity.feature.api.method.Comments comments = 1;
//  entity.feature.api.method.Attributes attributes = 2;
//  RequestTemplate request_template = 3;
//  ResponseTemplate response_template = 4;
//}

message GetList {
  message RequestTemplate {
    oneof template {
      dto.FilterPaging filter_paging = 1;
      dto.FilterPagingScope filter_paging_scope = 2;
      dto.FilterPagingReqScope filter_paging_req_scope = 3;
    }
  }
  message ResponseTemplate {
    oneof template {
      dto.Entity entity = 1;
      dto.EntityWError entity_error = 2;
    }
  }
  entity.feature.api.method.Attributes attributes = 1;
  RequestTemplate request_template = 2;
  ResponseTemplate response_template = 3;
  repeated entity.feature.api.method.EnumValue order_by_values = 4;
  entity.feature.api.method.Variables variables = 6;
}


message GetCount {
  message RequestTemplate {
    oneof template {
      dto.Filter filter = 1;
      dto.FilterScope filter_scope = 2;
      dto.FilterReqScope filter_req_scope = 3;
    }
  }
  message ResponseTemplate {
    oneof template {
      dto.CountEntityWError count_entity_error = 1;
    }
  }
  entity.feature.api.method.Attributes attributes = 1;
  RequestTemplate request_template = 2;
  ResponseTemplate response_template = 3;
  entity.feature.api.method.Variables variables = 6;
}

// TODO: в extension  Exists

// TODO: в extension ExistsKey

// TODO: в extension AttachList
// TODO: в extension DetachList

message Attach {
  message RequestTemplate {
    oneof template {
      dto.Link link = 1;
    }
  }
  message ResponseTemplate {
    oneof template {
      dto.OnlyValidError valid_error = 1;
    }
  }
  entity.feature.api.method.Attributes attributes = 1;
  RequestTemplate request_template = 2;
  ResponseTemplate response_template = 3;
  entity.feature.api.method.LinkedType linked_type = 4;
  entity.feature.api.method.Variables variables = 6;
}

message Detach {
  message RequestTemplate {
    oneof template {
      dto.Link link = 1;
    }
  }
  message ResponseTemplate {
    oneof template {
      dto.OnlyValidError valid_error = 1;
    }
  }
  entity.feature.api.method.Attributes attributes = 1;
  RequestTemplate request_template = 2;
  ResponseTemplate response_template = 3;
  entity.feature.api.method.LinkedType linked_type = 4;
  entity.feature.api.method.Variables variables = 6;
}

message GetLinkList {
  message RequestTemplate {
    oneof template {
      dto.LinkFilterPaging link_filter_paging = 1;
    }
  }
  message ResponseTemplate {
    oneof template {
      dto.Link link = 1;
      dto.LinkWError link_error = 7;
    }
  }
  entity.feature.api.method.Attributes attributes = 1;
  RequestTemplate request_template = 2;
  ResponseTemplate response_template = 3;
  entity.feature.api.method.LinkedType linked_type = 4;
  repeated entity.feature.api.method.EnumValue order_by_values = 5;
  entity.feature.api.method.Variables variables = 6;
}

message GetLinkCount {
  message RequestTemplate {
    oneof template {
      dto.LinkFilter link_filter = 1;
    }
  }
  message ResponseTemplate {
    oneof template {
      dto.CountEntityWError count_entity_error = 1;
    }
  }
  entity.feature.api.method.Attributes attributes = 1;
  RequestTemplate request_template = 2;
  ResponseTemplate response_template = 3;
  entity.feature.api.method.LinkedType linked_type = 4;
  entity.feature.api.method.Variables variables = 6;
}



