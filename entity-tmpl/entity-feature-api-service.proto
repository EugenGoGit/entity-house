syntax = "proto3";

import "entity-tmpl/entity-feature-api-options.proto";
import "entity-tmpl/entity-feature-api-method.proto";
import "entity-tmpl/entity-feature-options.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/descriptor.proto";



package entity.feature.api.service;

message ServersideSingletonCRUD {
  option (entity.feature.api.options.name_template) = "{EntityName}Service";
  option (entity.feature.api.options.service_leading_comment) = "Сервис управления сущностью {EntityName}";
  message MethodSet {
    entity.feature.api.method.GetMethod get_method = 1;
    entity.feature.api.method.SaveMethodCreateReplace save_method_create_replace = 2;
    entity.feature.api.method.EditMethod edit_method = 3;
    entity.feature.api.method.DeleteMethod delete_method = 4;
  }
  string http_root = 1;
  MethodSet method_set = 2;
  CustomComments custom_comments = 3;
}

message ServersideEntityCRUD {
  option (entity.feature.api.options.name_template) = "{EntityName}Service";
  option (entity.feature.api.options.service_leading_comment) = "Сервис управления сущностью {EntityName}";
  message MethodSet {
    entity.feature.api.method.GetMethodById get_method = 1;
    entity.feature.api.method.GetListMethod get_list_method = 2;
    entity.feature.api.method.GetCountMethod get_count_method = 3;
    entity.feature.api.method.ExistsKeyMethod exists_key_method = 4;
    entity.feature.api.method.ExistsMethod exists_method = 5;
    // .
    oneof save_method {
      // .
      entity.feature.api.method.SaveMethodCreateOnly save_method_create_only = 6;
      entity.feature.api.method.SaveMethodCreateReplace save_method_create_replace = 7;
    }
    // .
    oneof save_list_method {
      // .
      entity.feature.api.method.SaveListMethodCreateOnly save_list_method_create_only = 8;
      entity.feature.api.method.SaveListMethodCreateReplace save_list_method_create_replace = 9;
    }
    entity.feature.api.method.EditMethodById edit_method = 10;
    entity.feature.api.method.EditListMethod edit_list_method = 11;
    entity.feature.api.method.DeleteMethodById delete_method = 12;
    entity.feature.api.method.DeleteListMethod delete_list_method = 13;
    repeated entity.feature.api.method.AttachMethod attach_methods = 14;
    repeated entity.feature.api.method.DetachMethod detach_methods = 15;
    repeated entity.feature.api.method.GetLinkListMethod get_link_list_methods = 16;
    repeated entity.feature.api.method.GetLinkCountMethod get_link_count_methods = 17;
  }
  string http_root = 1;
  MethodSet method_set = 2;
  // Определение ключевых полей сущности для использования в сервисе
  // Может быть переопределен в методах
  entity.feature.options.KeyFieldsDefinition key_fields_definition = 3;
  CustomComments custom_comments = 4;
}

message CustomComments {
  // Переопределяет entity.feature.api.options.service_leading_comment
  string leading_comment = 1;
  // Дополнительный комментарий к методу
  string additional_leading_comment = 2;
}
