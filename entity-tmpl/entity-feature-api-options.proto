syntax = "proto3";


import "google/api/field_behavior.proto";
import "google/protobuf/descriptor.proto";
import "google/api/http.proto";
import "entity-tmpl/entity-feature-options.proto";


package entity.feature.api.options;

// TODO: Проверить , что поля и опции нельзя выставить там где не надо. разнести по пакетам
extend google.protobuf.MessageOptions {
  string name_template = 3001;
  MethodComponentTemplateSet method_component_template_set = 3002;
  google.api.HttpRule http_rule = 3003;
  google.api.FieldBehavior key_field_behavior = 3004;
  bool server_streaming = 3005;
  bool client_streaming = 3006;
  string message_comments = 3007;
  string service_leading_comment = 3008;
}

// TODO: попробовать опции для указания ключа и сущности в шаблоне
extend google.protobuf.FieldOptions {
  string field_comments = 3001;
}

extend google.protobuf.OneofOptions {
  string oneof_comments = 3001;
}

message MethodComponentTemplateSet {
  string name_template = 1;
  string request_name = 2;
  string response_name = 3;
  RequestTemplate request_template = 4;
  ResponseTemplate response_template = 5;
  string leading_comment = 6;
}

message RequestTemplate {
  oneof template {
    EntityKeyRequest entity_key_request = 1;
    EntityRequest entity_request = 2;
  }
}

message ResponseTemplate {
  oneof template {
    OneEntityResponse one_entity_response = 1;
    ListEntityResponse list_entity_response = 2;
    CountEntityResponse count_entity_response = 3;
    EmptyWErrorResponse empty_w_error_response = 4;
  }
}

// Поле этого типа в шаблоне будет заменено при генерации на поле с типом сущности
// Комментарии к полю будут взяты от комментария сущности
message EntityDescriptor {}

// Поле этого типа в шаблоне будет заменено при генерации на поля ключа сущности
// Комментарии к полю будут взяты от полей ключа сущности
message EntityKeyDescriptor {}

message OneEntityResponse {
  message Error {
    option (message_comments) = "Ошибка запроса";
    oneof reason {
      option (oneof_comments) = "Причина ошибки";
      ValidationError validation = 1 [(field_comments) = "Ошибка валидации"];
    }
  }
  oneof type {
    option (oneof_comments) = "Тип ответа";
    EntityDescriptor data = 1 [(field_comments) = "{EntityComment}"];
    Error error = 2 [(field_comments) = "Ошибка"];
  }
}

message ListEntityResponse {
  repeated EntityDescriptor data = 1;
}

message EntityKeyRequest {
  EntityKeyDescriptor entity_key = 1 [(google.api.field_behavior) = REQUIRED];
}

message EntityRequest {
  EntityDescriptor data = 1 [(google.api.field_behavior) = REQUIRED];
}

// Ответ на запрос получения количества
message CountEntityResponse {
  message Error {
    option (message_comments) = "Ошибка запроса";
    oneof reason {
      option (oneof_comments) = "Причина ошибки";
      ValidationError validation = 1 [(field_comments) = "Ошибка валидации"];
    }
  }
  oneof type {
    option (oneof_comments) = "Тип ответа";
    int32 data = 1 [(field_comments) = "Всего количество"];
    Error error = 2 [(field_comments) = "Ошибка"];
  }
}

// Ответ на запрос только с ошибками
message EmptyWErrorResponse {
  message Error {
    option (message_comments) = "Ошибка запроса";
    oneof reason {
      option (oneof_comments) = "Причина ошибки";
      ValidationError validation = 1 [(field_comments) = "Ошибка валидации"];
    }
  }
  oneof type {
    option (oneof_comments) = "Тип ответа";
    Error error = 1 [(field_comments) = "Ошибка"];
  }
}

message ValidationError {
  option (message_comments) = "Ошибки валидации.\n Эти проверки выполняются до обращения в базу данных";
  string path = 1 [(google.api.field_behavior) = REQUIRED, (field_comments) = "Путь к полю в формате наименования прото"];
  string message = 2 [(google.api.field_behavior) = REQUIRED, (field_comments) = "Валидационное сообщение"];
}








