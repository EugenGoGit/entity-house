// АПИ управления сущностью SetSettings

syntax = "proto3";

package pet.v1;

import "google/api/annotations.proto";

import "google/api/field_behavior.proto";

import "protoc-gen-openapiv2/options/annotations.proto";

option cc_enable_arenas = true;

option java_package = "ru.keyapis.access_control.v1";

option optimize_for = LITE_RUNTIME;

// Запрос метода DeleteSetSettings
message DeleteSetSettingsRequest {
    // Флаг приема SET сигнала в варианте RFC
    bool is_first_on = 1 [
        (google.api.field_behavior) = REQUIRED,
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "true" }
    ];

    // Флаг приема SET сигнала в варианте sipinfo
    // jfhfjgiog0pew[w[qw]]
    bool is_flag_on = 2 [
        (google.api.field_behavior) = REQUIRED,
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "true" }
    ];
}

// Ответ на запрос метода DeleteSetSettings
message DeleteSetSettingsResponse {
}

// Запрос метода GetSetSettings
message GetSetSettingsRequest {
    // Флаг приема SET сигнала в варианте RFC
    bool is_first_on = 1 [
        (google.api.field_behavior) = REQUIRED,
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "true" }
    ];

    // Флаг приема SET сигнала в варианте sipinfo
    // jfhfjgiog0pew[w[qw]]
    bool is_flag_on = 2 [
        (google.api.field_behavior) = REQUIRED,
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "true" }
    ];

    // Rjvvtyn
    string ghghg = 3;
}

// Ответ на запрос метода GetSetSettings
message GetSetSettingsResponse {
    // коммент pet.v1.GetSetSettingsResponse.type
    oneof type {
        // pet.v1.GetSetSettingsResponse.data
        SetSettings data = 1;
    }
}

// Запрос метода SaveSetSettings
message SaveSetSettingsRequest {
}

// Ответ на запрос метода SaveSetSettings
message SaveSetSettingsResponse {
}

// Настройки SET
message SetSettings {
    option deprecated = true;

    option no_standard_descriptor_accessor = true;

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = { discriminator: "jfjfjf" };

    // Флаг приема SET сигнала в варианте RFC
    bool is_first_on = 1 [
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "true" }
    ];

    // Флаг приема SET сигнала в варианте inbound
    bool is_second_on = 2 [
        (google.api.field_behavior) = REQUIRED,
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "true" }
    ];

    // Флаг приема SET сигнала в варианте sipinfo
    // jfhfjgiog0pew[w[qw]]
    bool is_flag_on = 3 [
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "true" }
    ];

    // Еще поле
    Pet pet = 4;

    // пет как пет
    message Pet {
        // кол-во
        repeated int32 ifif = 1;

        // имя
        string fhffg = 2;
    }
}

// Сервис управления сущностью SetSettings
service SetSettingsService {
    // Метод удаления настроек.
    // Метод доступен для: admin
    rpc DeleteSetSettings ( DeleteSetSettingsRequest ) returns ( DeleteSetSettingsResponse ) {
        option (google.api.http) = {
            delete: "/device/api/v1/settings/is_first_on/{is_first_on}/is_flag_on/{is_flag_on}"
        };
    }

    // Метод GetSetSettings
    rpc GetSetSettings ( GetSetSettingsRequest ) returns ( GetSetSettingsResponse ) {
        option (google.api.http) = {
            get: "/device/api/v1/settings/is_first_on/{is_first_on}/is_flag_on/{is_flag_on}"
        };
    }

    // Метод SaveSetSettings
    rpc SaveSetSettings ( SaveSetSettingsRequest ) returns ( SaveSetSettingsResponse ) {
        option (google.api.http) = { post: "/device/api/v1/settings/list", body: "*" };
    }
}
