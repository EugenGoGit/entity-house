// АПИ управления сущностью PetGroup

syntax = "proto3";

package pet.v1;

import "google/api/annotations.proto";

import "google/api/field_behavior.proto";

import "google/protobuf/timestamp.proto";

import "protoc-gen-openapiv2/options/annotations.proto";

option cc_enable_arenas = true;

option csharp_namespace = "Pet.V1";

option go_package = "/pet_v1";

option java_multiple_files = false;

option java_outer_classname = "PetV1Proto";

option java_package = "ru.pet.v1";

option java_string_check_utf8 = true;

option objc_class_prefix = "PETV1";

option optimize_for = LITE_RUNTIME;

option php_namespace = "Pet\\V1";

option ruby_package = "Pet::V1";

// Запрос удаления группы животных
message DeletePetGroupRequest {
    // Идентификатор группы животных.
    // # Тип: Guid
    string id = 1 [(google.api.field_behavior) = REQUIRED];
}

// Ответ на запрос удаления группы животных
message DeletePetGroupResponse {
    // Тип ответа
    oneof type {
        // Ошибка
        Error error = 1;
    }

    // Ошибка запроса
    message Error {
        // Причина ошибки
        oneof reason {
            // Ошибка валидации
            ValidationError validation = 1;
        }
    }
}

// Запрос получения количества групп животных
message GetPetGroupCountRequest {
    // Фильтр
    PetGroupFilter filter = 1;
}

// Ответ на запрос получения количества групп животных
message GetPetGroupCountResponse {
    // Тип ответа
    oneof type {
        // Всего количество
        int32 data = 1;

        // Ошибка
        Error error = 2;
    }

    // Ошибка запроса
    message Error {
        // Причина ошибки
        oneof reason {
            // Ошибка валидации
            ValidationError validation = 1;
        }
    }
}

// Запрос получения списка групп животных
message GetPetGroupListRequest {
    // Фильтр
    PetGroupFilter filter = 1;

    // Вариант разбиения на страницы
    oneof pagination {
        // Постраничный вывод
        PetGroupPaging paging = 2;
    }
}

// Ответ на запрос получения списка групп животных
message GetPetGroupListResponse {
    // Тип ответа
    oneof type {
        // Группа животных
        PetGroup data = 1;

        // Ошибка
        Error error = 2;
    }

    // Ошибка запроса
    message Error {
        // Причина ошибки
        oneof reason {
            // Ошибка валидации
            ValidationError validation = 1;
        }
    }
}

// Запрос получения группы животных
message GetPetGroupRequest {
    // Идентификатор группы животных.
    // # Тип: Guid
    string id = 1 [(google.api.field_behavior) = REQUIRED];
}

// Ответ на запрос получения группы животных
message GetPetGroupResponse {
    // Тип ответа
    oneof type {
        // Группа животных
        PetGroup data = 1;

        // Ошибка
        Error error = 2;
    }

    // Ошибка запроса
    message Error {
        // Причина ошибки
        oneof reason {
            // Ошибка валидации
            ValidationError validation = 1;
        }
    }
}

// Группа животных
message PetGroup {
    // Идентификатор группы животных.
    // # Тип: Guid
    string id = 1;

    // Наименование.
    // # Диапазон: 3..256
    string title = 2 [
        (google.api.field_behavior) = REQUIRED,
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "UTCPLUS0300MOSCOW_STPETERSBURG_VOLGOGRAD" }
    ];

    // Описание.
    // # Диапазон: 3..256
    string description = 3;

    // Дата удаления группы животных из использования
    google.protobuf.Timestamp deleted_at = 4;

    // Дата изменения группы животных.
    // Поле используется при редактировании и создании для контроля актуальности изменяемой версии
    google.protobuf.Timestamp changed_at = 5 [(google.api.field_behavior) = REQUIRED];

    // Теги группы.
    // # Диапазон: 0..10
    repeated string tags = 6;

    // Ошибка сохранения
    message SavingError {
        // Причина ошибки
        oneof reason {
            // Конфликт версий
            Conflict conflict = 1;
        }

        // Конфликт версий.
        // Причины:
        // - В базе хранится другая версия строки, значения changed_at отличаются
        message Conflict {
        }
    }
}

// Фильтр групп животных
message PetGroupFilter {
    // По тексту.
    // Если значение не передано то поиск по нему не производится.
    // # Диапазон: 3..64.
    // # Поиск производится по полям:
    // # - Наименование
    string text = 1;

    // По тегам.
    // # Диапазон: 0..10
    repeated string tags = 2;
}

// Постраничный вывод
message PetGroupPaging {
    // Тип значения сортировки.
    // Если значение не передано, то будет взято значение по умолчанию
    OrderByType order_by_type = 1;

    // Тип направления сортировки.
    // # По умолчанию: DESC
    DirectionType direction_type = 2;

    // Количество записей на страницу.
    // Если значение 0 (не передано), то будет взято значение по умолчанию.
    // # Диапазон: 0..100.
    // # По умолчанию: 20
    int32 limit = 3;

    // Сдвиг.
    // # Диапазон: 0..2147483647
    int32 offset = 4;

    // Справочник типов направлений сортировки.
    // # Тип: byte
    enum DirectionType {
        // Значение не указано
        DIRECTION_TYPE_UNKNOWN = 0;

        // От большего к меньшему
        DESC = 1;

        // От меньшего к большему
        ASC = 2;
    }

    // Справочник типов значений сортировки.
    // # Тип: byte
    enum OrderByType {
        // Значение не указано
        ORDER_BY_TYPE_UNKNOWN = 0;

        // По идентификатору
        ID = 1;

        // По времени создания
        CREATED_AT = 2;

        // По улице, номеру дома, корпусу
        STREET_THEN_NUMBER_THEN_PART = 3;
    }
}

// Связка группы животных и комнаты
message PetGroupRoom {
    // Идентификатор группы животных.
    // # Тип: Guid
    string id = 1 [(google.api.field_behavior) = REQUIRED];

    // Идентификатор комнаты.
    // Тип: Guid
    string room_id = 2 [(google.api.field_behavior) = REQUIRED];
}

// Запрос на привязку группы животных и комнаты
message PutPetGroupRoomAttachRequest {
    // Связь PetGroup и Room
    PetGroupRoom data = 1 [(google.api.field_behavior) = REQUIRED];
}

// Ответ на запрос на привязку группы животных и комнаты
message PutPetGroupRoomAttachResponse {
    // Тип ответа
    oneof type {
        // Ошибка
        Error error = 1;
    }

    // Ошибка запроса
    message Error {
        // Причина ошибки
        oneof reason {
            // Ошибка валидации
            ValidationError validation = 1;
        }
    }
}

// Запрос на отвязку группы животных и комнаты
message PutPetGroupRoomDetachRequest {
    // Связь PetGroup и Room
    PetGroupRoom data = 1 [(google.api.field_behavior) = REQUIRED];
}

// Ответ на запрос на отвязку группы животных и комнаты
message PutPetGroupRoomDetachResponse {
    // Тип ответа
    oneof type {
        // Ошибка
        Error error = 1;
    }

    // Ошибка запроса
    message Error {
        // Причина ошибки
        oneof reason {
            // Ошибка валидации
            ValidationError validation = 1;
        }
    }
}

// Запрос на создание/редактирование группы животных
message SavePetGroupRequest {
    // Группа животных
    PetGroup data = 1 [(google.api.field_behavior) = REQUIRED];
}

// Ответ на запрос создания/редактирования группы животных
message SavePetGroupResponse {
    // Тип ответа
    oneof type {
        // Группа животных
        PetGroup data = 1;

        // Ошибка
        Error error = 2;
    }

    // Ошибка запроса
    message Error {
        // Причина ошибки
        oneof reason {
            // Ошибка валидации
            ValidationError validation = 1;

            // Ошибка сохранения
            PetGroup.SavingError saving = 2;
        }
    }
}

// Ошибки валидации.
// Эти проверки выполняются до обращения в базу данных
message ValidationError {
    // Путь к полю в формате наименования прото
    string path = 1 [(google.api.field_behavior) = REQUIRED];

    // Валидационное сообщение
    string message = 2 [(google.api.field_behavior) = REQUIRED];
}

// Сервис управления группами животных.
// Сервис реализуется в проекте Dummy
service PetGroupService {
    // Метод удаления группы животных.
    // Метод доступен для: admin, service, bti, seller, owner, employee
    rpc DeletePetGroup ( DeletePetGroupRequest ) returns ( DeletePetGroupResponse ) {
        option (google.api.http) = { delete: "/pet/api/v1/pet_group/{id}" };
    }

    // Метод получения группы животных.
    // Для owner, employee возвращаются только группы животных c COMPANY_ID из токена.
    // Метод доступен для: admin, service, bti, seller, owner, employee
    rpc GetPetGroup ( GetPetGroupRequest ) returns ( GetPetGroupResponse ) {
        option (google.api.http) = { get: "/pet/api/v1/pet_group/{id}" };
    }

    // Метод получения количества групп животных.
    // Метод доступен для: admin, service, bti, seller, owner, employee
    rpc GetPetGroupCount ( GetPetGroupCountRequest ) returns ( GetPetGroupCountResponse ) {
        option (google.api.http) = { get: "/pet/api/v1/pet_group/count" };
    }

    // Метод получения списка групп животных.
    // Метод доступен для: admin, service, bti, seller, owner, employee
    rpc GetPetGroupList ( GetPetGroupListRequest ) returns ( stream GetPetGroupListResponse ) {
        option (google.api.http) = { get: "/pet/api/v1/pet_group/list" };
    }

    // Метод привязки группы животных и комнаты.
    // Метод доступен для: admin, service, bti, owner, employee
    rpc PutPetGroupRoomAttach ( PutPetGroupRoomAttachRequest ) returns ( PutPetGroupRoomAttachResponse ) {
        option (google.api.http) = {
            put: "/pet/api/v1/pet_group/id/{data.id}/room_id/{data.room_id}/attach"
        };
    }

    // Метод отвязки группы животных и комнаты.
    // Метод доступен для: admin, service, bti, owner, employee
    rpc PutPetGroupRoomDetach ( PutPetGroupRoomDetachRequest ) returns ( PutPetGroupRoomDetachResponse ) {
        option (google.api.http) = {
            put: "/pet/api/v1/pet_group/id/{data.id}/room_id/{data.room_id}/detach"
        };
    }

    // Метод создания и изменения группы животных.
    // Метод доступен для: admin, service, bti, seller, owner, employee
    rpc SavePetGroup ( SavePetGroupRequest ) returns ( SavePetGroupResponse ) {
        option (google.api.http) = { post: "/pet/api/v1/pet_group", body: "*" };
    }
}
