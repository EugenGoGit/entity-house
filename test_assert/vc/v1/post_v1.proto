/*
Спецификация АПИ управления сущностью Post
*/
syntax = "proto3";
package post.v1;
import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/descriptor.proto";
// Сервис управления сущностью Post
service PostService {
    // Метод получения единичной сущности Post по ключу
    rpc GetPost ( GetPostRequest ) returns ( GetPostResponse ) {
        option (google.api.http) = { get: "/post/api/v1/post/{uid}" };
    }
    // Метод получения списка сущностей Post по фильтру
    rpc GetPostList ( GetPostListRequest ) returns ( stream GetPostListResponse ) {
        option (google.api.http) = { get: "/post/api/v1/post/list" };
    }
    // Метод создания/редактирования сущности Post
    rpc SavePost ( SavePostRequest ) returns ( SavePostResponse ) {
        option (google.api.http) = { post: "/post/api/v1/post", body: "*" };
    }
}
// Запрос получения списка сущностей Post по фильтру
message GetPostListRequest {
    // Фильтр
    PostFilter filter = 1;
    // Вариант разбиения на страницы
    oneof pagination {
        // Постраничный вывод
        PostPaging paging = 2;
    }
}
// Ответ на запрос получения списка сущностей Post по фильтру
message GetPostListResponse {
    // Ошибка запроса
    message Error {
        // Причина ошибки
        oneof reason {
            // Ошибка валидации
            ValidationError validation = 1;
        }
    }
    // Тип ответа
    oneof type {
        // Сущность
        Post data = 1;
        // Ошибка
        Error error = 2;
    }
}
// Запрос получения единичной сущности Post по ключу
message GetPostRequest {
    // Идентификатор
    string uid = 1 [(google.api.field_behavior) = REQUIRED];
}
// Ответ на запрос получения единичной сущности Post по ключу
message GetPostResponse {
    // Ошибка запроса
    message Error {
        // Причина ошибки
        oneof reason {
            // Ошибка валидации
            ValidationError validation = 1;
        }
    }
    // Тип ответа
    oneof type {
        // Сущность
        Post data = 1;
        // Ошибка
        Error error = 2;
    }
}
// Сущность
message Post {
    // Ошибка сохранения
    message SavingError {
        // Конфликт версий.
        // Причины:
        // - В базе хранится другая версия строки, значения changed_at отличаются
        message Conflict {
        }
        // Причина ошибки
        oneof reason {
            // Конфликт версий
            Conflict conflict = 1;
        }
    }
    // Идентификатор
    string uid = 1;
    // Наименование
    string name = 2;
    // Тип
    string type = 3;
}
// Фильтр
message PostFilter {
    repeated string types = 1;
}
// Постраничный вывод
message PostPaging {
    // Справочник типов направлений сортировки.
    // # Тип: byte
    enum DirectionType {
        // Значение не указано
        DIRECTION_TYPE_UNKNOWN = 0;
        // От большего к меньшему
        DESC = 1;
        // От меньшего к большему
        ASC = 2;
    }
    // Справочник типов значений сортировки.
    // # Тип: byte
    enum OrderByType {
        // Значение не указано
        ORDER_BY_TYPE_UNKNOWN = 0;
    }
    // Тип значения сортировки.
    // Если значение не передано, то будет взято значение по умолчанию
    OrderByType order_by_type = 1;
    // Тип направления сортировки.
    // # По умолчанию: DESC
    DirectionType direction_type = 2;
    // Количество записей на страницу.
    // Если значение 0 (не передано), то будет взято значение по умолчанию.
    // # Диапазон: 0..100.
    // # По умолчанию: 20
    int32 limit = 3;
    // Сдвиг.
    // # Диапазон: 0..2147483647
    int32 offset = 4;
}
// Запрос создания/редактирования сущности Post
message SavePostRequest {
    // Сущность
    Post data = 1 [(google.api.field_behavior) = REQUIRED];
}
// Ответ на запрос создания/редактирования сущности Post
message SavePostResponse {
    // Ошибка запроса
    message Error {
        // Причина ошибки
        oneof reason {
            // Ошибка валидации
            ValidationError validation = 1;
            // Ошибка сохранения
            Post.SavingError saving = 2;
        }
    }
    // Тип ответа
    oneof type {
        // Сущность
        Post data = 1;
        // Ошибка
        Error error = 2;
    }
}
// Ошибки валидации.
// Эти проверки выполняются до обращения в базу данных
message ValidationError {
    // Путь к полю в формате наименования прото
    string path = 1 [(google.api.field_behavior) = REQUIRED];
    // Валидационное сообщение
    string message = 2 [(google.api.field_behavior) = REQUIRED];
}
